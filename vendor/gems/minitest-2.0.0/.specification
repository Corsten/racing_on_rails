--- !ruby/object:Gem::Specification 
name: minitest
version: !ruby/object:Gem::Version 
  hash: 15
  prerelease: false
  segments: 
  - 2
  - 0
  - 0
  version: 2.0.0
platform: ruby
authors: 
- Ryan Davis
autorequire: 
bindir: bin
cert_chain: []

date: 2010-11-11 00:00:00 -08:00
default_executable: 
dependencies: 
- !ruby/object:Gem::Dependency 
  name: rubyforge
  prerelease: false
  requirement: &id001 !ruby/object:Gem::Requirement 
    none: false
    requirements: 
    - - ">="
      - !ruby/object:Gem::Version 
        hash: 7
        segments: 
        - 2
        - 0
        - 4
        version: 2.0.4
  type: :development
  version_requirements: *id001
- !ruby/object:Gem::Dependency 
  name: minitest
  prerelease: false
  requirement: &id002 !ruby/object:Gem::Requirement 
    none: false
    requirements: 
    - - ">="
      - !ruby/object:Gem::Version 
        hash: 15
        segments: 
        - 1
        - 6
        - 0
        version: 1.6.0
  type: :development
  version_requirements: *id002
- !ruby/object:Gem::Dependency 
  name: hoe
  prerelease: false
  requirement: &id003 !ruby/object:Gem::Requirement 
    none: false
    requirements: 
    - - ">="
      - !ruby/object:Gem::Version 
        hash: 23
        segments: 
        - 2
        - 6
        - 0
        version: 2.6.0
  type: :development
  version_requirements: *id003
description: |-
  minitest provides a complete suite of testing facilities supporting
  TDD, BDD, mocking, and benchmarking.
  
  minitest/unit is a small and incredibly fast unit testing framework.
  It provides a rich set of assertions to make your tests clean and
  readable.
  
  minitest/spec is a functionally complete spec engine. It hooks onto
  minitest/unit and seamlessly bridges test assertions over to spec
  expectations.
  
  minitest/benchmark is an awesome way to assert the performance of your
  algorithms in a repeatable manner. Now you can assert that your newb
  co-worker doesn't replace your linear algorithm with an exponential
  one!
  
  minitest/mock by Steven Baker, is a beautifully tiny mock object
  framework.
  
  minitest/pride shows pride in testing and adds coloring to your test
  output.
  
  minitest/unit is meant to have a clean implementation for language
  implementors that need a minimal set of methods to bootstrap a working
  test suite. For example, there is no magic involved for test-case
  discovery.
email: 
- ryand-ruby@zenspider.com
executables: []

extensions: []

extra_rdoc_files: 
- History.txt
- Manifest.txt
- README.txt
files: 
- .autotest
- History.txt
- Manifest.txt
- README.txt
- Rakefile
- design_rationale.rb
- lib/minitest/autorun.rb
- lib/minitest/benchmark.rb
- lib/minitest/mock.rb
- lib/minitest/pride.rb
- lib/minitest/spec.rb
- lib/minitest/unit.rb
- test/test_minitest_benchmark.rb
- test/test_minitest_mock.rb
- test/test_minitest_spec.rb
- test/test_minitest_unit.rb
has_rdoc: true
homepage: http://rubyforge.org/projects/bfts
licenses: []

post_install_message: 
rdoc_options: 
- --main
- README.txt
require_paths: 
- lib
required_ruby_version: !ruby/object:Gem::Requirement 
  none: false
  requirements: 
  - - ">="
    - !ruby/object:Gem::Version 
      hash: 3
      segments: 
      - 0
      version: "0"
required_rubygems_version: !ruby/object:Gem::Requirement 
  none: false
  requirements: 
  - - ">="
    - !ruby/object:Gem::Version 
      hash: 3
      segments: 
      - 0
      version: "0"
requirements: []

rubyforge_project: bfts
rubygems_version: 1.6.2
signing_key: 
specification_version: 3
summary: minitest provides a complete suite of testing facilities supporting TDD, BDD, mocking, and benchmarking
test_files: 
- test/test_minitest_benchmark.rb
- test/test_minitest_mock.rb
- test/test_minitest_spec.rb
- test/test_minitest_unit.rb
